@startuml
'https://plantuml.com/class-diagram


package DetectionsFrameworkService {
    interface DetectionsFramework #aliceblue ##[dotted]blue {
      status(): Status
    }

    interface Detectable #aliceblue ##[dotted]blue {
        detections(): Detection[]
    }

    class MotionFramework #yellow ##[dotted]

    class DetectionsObserver {
      - framework: Detectable
      - eventsDispatcher: DetectionsDispatcher
    }


    class Controller #green {
       - framework: DetectionsFramework
       - detectionsObserver: DetectionsObserver
    }

    enum Status {
      STOPPED
      RUNNING
    }
}

package Detections {
    interface Detection #aliceblue ##[dotted]blue {
      time: number
      data: any
    }

    package Motion {
        class MotionDetectionData {
           audio: string
           video: string
           image: string
        }

        class MotionDetection {
           time: number
           data: MotionDetectionData
        }
    }

    interface DetectionsDispatcher #aliceblue ##[dotted]blue {
       notify_about(detection: Detection)
    }

    class DetectionsDispatcherViaQueue

    Detection <|-down- MotionDetection
}

package Commands {
    enum Commands {
      START
      STOP
      RESTART
      TERMINATE
    }

    interface ExecutingCommands #aliceblue ##[dotted]blue {
      do(command: Commands)
    }

    ExecutingCommands .. Commands
}



interface Runnable #aliceblue ##[dotted]blue {
   start(): void
   stop(): void
   is_running(): bool
}


DetectionsObserver -up-|> Runnable
DetectionsObserver o-right-. Detectable
DetectionsDispatcher .* DetectionsObserver
DetectionsFramework <|-- MotionFramework
DetectionsFramework -up-|> ExecutingCommands

DetectionsFramework .. Status
Detectable .. Detection
DetectionsDispatcher .. Detection
MotionDetection .right. MotionDetectionData
DetectionsObserver -* Controller
DetectionsFramework -down-* Controller
DetectionsFramework -up-|> Detectable
DetectionsDispatcher <|-down- DetectionsDispatcherViaQueue

@enduml